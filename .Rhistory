knitr::opts_chunk$set(echo = TRUE)
runExample("01_hello")
library(shiny)
runExample("01_hello")
# Create a data frame (table)
my_table <- data.frame(
Name = c("Alice", "Bob", "Catherine", "David"),
Age = c(25, 30, 22, 28),
Score = c(85, 92, 78, 64)
)
# View the created table
print(my_table)
# Create a data frame (table)
my_table <- data.frame(
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions"),
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught")
)
# View the created table
print(my_table)
data <- read.csv(all_seasons.csv)
setwd("~/GitHub/idrinktapwater.github.io")
data <- read.csv(all_seasons.csv)
data <- read.csv(all_seasons.csv)
data <- read_csv("all_seasons.csv")
data <- read.csv("all_seasons.csv")
setwd("~/GitHub/idrinktapwater.github.io")
data <- read.csv("all_seasons.csv")
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("all_seasons.csv")
library(tidyverse)
data <- read_csv("all_seasons.csv")
data
data <- read_csv("all_seasons.csv")
data
# Create a data frame (table)
my_table <- data.frame(
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated"),
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught", "self-taught")
)
# View the created table
print(my_table)
# Create a data frame (table)
my_table <- data.frame(
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught", "self-taught"),
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated)")
)
# View the created table
print(my_table)
# Create a data frame (table)
my_table <- data.frame(
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught"),
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated)")
)
# Create a data frame (table)
my_table <- data.frame(
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught", "Self-taught"),
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated)")
)
# View the created table
print(my_table)
data %<%
select("player_name")
data %>%
select(player_name)
data %>%
select(player_name, player_height, gp, pts, reb, ast)
data %>%
select(player_name, player_height, gp, pts, reb, ast, net_rating, season)
set.seed(2013)
X <- sample(1:100, size = 50)
Y <- sample(1:100, size = 50)
m <- lm(Y ~ X)
summary(m)
data %>%
select(player_name, player_height, gp, pts, reb, ast, net_rating, season)
curated <- data %>%
select(player_name, player_height, gp, pts, reb, ast, net_rating, season)
curated
Average <- curated %>%
summarise_all(mean)
curated <- bind_rows(curated, Average)
numeric_columns <- curated %>% select_if(is.numeric)
Average <- numeric_columns %>%
summarise_all(mean)
result <- bind_rows(curated, Average)
print(result)
result <- result %>%
arrange(player_name)
result
Average
result <- result %>%
arrange(desc(player_name))
result
# Assuming result is your data frame
# Set player_name to "Average" in the first row
Average[1, "player_name"] <- "Average"
# Print the updated data frame
print(Average)
# Assuming result is your data frame
# Set player_name to "Average" in the first row
Average[1, "player_name"] <- "Average"
Average[1, "season"] <- "N.A"
# Print the updated data frame
print(Average)
# Assuming result is your data frame
# Set player_name to "Average" in the first row
Average[nrow(Average), "player_name"] <- "Average"
Average[1, "season"] <- "N.A"
# Print the updated data frame
print(Average)
# Assuming result is your data frame
# Reorder the columns
Average <- Average %>%
select(player_name, everything())
# Print the updated data frame
print(Average)
numeric_columns <- curated %>% select_if(is.numeric)
Average <- numeric_columns %>%
summarise_all(mean)
result <- bind_rows(curated, Average)
print(result)
result <- result %>%
arrange(player_name)
result
# Assuming result is your data frame
# Filter rows where player_name is "Average"
average_rows <- result %>%
filter(player_name == "Average")
# Print the rows where player_name is "Average"
print(average_rows)
curated <- data %>%
select(player_name, player_height, gp, pts, reb, ast, net_rating, season)
curated <- data %>%
select(player_name, player_height, gp, pts, reb, ast, net_rating, season)
curated
library(dplyr)
library(purrr)
# Assuming your data frame is named df
# Convert season column to factor to ensure correct sorting
df$season <- factor(df$season, levels = unique(df$season))
library(dplyr)
library(purrr)
# Assuming your data frame is named df
# Convert season column to factor to ensure correct sorting
curated$season <- factor(curated$season, levels = unique(curated$season))
# Group by season and write separate CSV files
curated %>%
group_split(season) %>%
walk2(., unique(curated$season), ~write.csv(.x, file = paste0("season_", .y, ".csv"), row.names = FALSE))
1112 <- read_csv("season_2011-12.csv")
s1112 <- read_csv("season_2011-12.csv")
s1112
# Create a data frame (table)
my_table <- data.frame(
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught", "Self-taught", "Self-taught"),
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated)", "purrr walk2")
)
# View the created table
print(my_table)
s9697 <- read_csv("season_1996-97.csv")
s9798 <- read_csv("season_1997-98.csv")
s9899 <- read_csv("season_1998-99.csv")
s9900 <- read_csv("season_1999-00.csv")
s0001 <- read_csv("season_2000-01.csv")
s0102 <- read_csv("season_2001-02.csv")
s0203 <- read_csv("season_2002-03.csv")
s0304 <- read_csv("season_2003-04.csv")
s0405 <- read_csv("season_2004-05.csv")
s0506 <- read_csv("season_2005-06.csv")
s0607 <- read_csv("season_2006-07.csv")
s0708 <- read_csv("season_2007-08.csv")
s0809 <- read_csv("season_2008-09.csv")
s0910 <- read_csv("season_2009-10.csv")
s1011 <- read_csv("season_2010-11.csv")
s1112 <- read_csv("season_2011-12.csv")
s1213 <- read_csv("season_2012-13.csv")
s1314 <- read_csv("season_2013-14.csv")
s1415 <- read_csv("season_2014-15.csv")
s1516 <- read_csv("season_2015-16.csv")
s1617 <- read_csv("season_2016-17.csv")
s1718 <- read_csv("season_2017-18.csv")
s1819 <- read_csv("season_2018-19.csv")
s1920 <- read_csv("season_2019-20.csv")
s2021 <- read_csv("season_2020-21.csv")
s2122 <- read_csv("season_2021-22.csv")
s2223 <- read_csv("season_2022-23.csv")
1 + 1
ggplot(curated) +
aes(x=height, y=pts)+
geom_point()
ggplot(curated) +
aes(x=player_height, y=pts)+
geom_point()
ggplot(curated) +
aes(x = player_height) +
geom_histogram(binwidth = your_binwidth, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Player Heights",
x = "Player Height",
y = "Frequency")
ggplot(curated) +
aes(x = player_height) +
geom_histogram(binwidth = 50, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Player Heights",
x = "Player Height",
y = "Frequency")
ggplot(curated) +
aes(x = player_height) +
geom_histogram(binwidth = 200, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Player Heights",
x = "Player Height",
y = "Frequency")
ggplot(curated) +
aes(x = player_height) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Player Heights",
x = "Player Height",
y = "Frequency")
ggplot(curated) +
aes(x = player_height) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Player Heights",
x = "Player Height",
y = "Frequency")
ggplot(curated) +
aes(x = gp) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Games played by each player",
x = "Games played",
y = "Frequency")
curated <- curated %>%
arrange(gp)
curated
curated <- curated %>%
arrange(desc(gp))
curated
curated <- curated %>%
arrange(player_height)
curated
# Assuming your data is named 'curated'
average_height <- curated %>%
group_by(player_name) %>%
summarise(average_height = mean(player_height, na.rm = TRUE))
# Print the result
print(average_height)
# Assuming your data is named 'curated'
overall_average_height <- mean(curated$player_height, na.rm = TRUE)
# Print the result
print(overall_average_height)
curated <- curated %>%
group_by(player_name) %>%
arrange(pts)
curated
curated <- curated %>%
group_by(player_name) %>%
arrange(player_name)
curated
curated <- curated %>%
group_by(player_name) %>%
arrange(desc(pts))
curated
curated <- curated %>%
arrange(desc(pts))
curated
Bestof <- curated %>%
group_by(player_name) %>%
filter(net_rating == max(net_rating, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Bestof)
Bestof %>%
arrange(player_name)
Bestof
Bestof <- Bestof%>%
arrange(player_name)
Bestof
# Create a data frame (table)
my_table <- data.frame(
Weeks = c("2 and 4", 3, 5, 6, 7, 8, "Self-taught", "Self-taught", "Self-taught", "Self-taught"),
Topics = c("Dataset Manipulation", "Variables", "Functions", "Iterations", "Data visualization", "Shiny", "Good Folder naming conventions", "write.csv (how to save a csv that I've manipulated)", "purrr walk2", "filter(net_rating == max(net_rating))")
)
# View the created table
print(my_table)
ggplot(Bestof) +
aes(x=player_height, y=pts)+
geom_point()
overall_average_height <- mean(Bestof$player_height, na.rm = TRUE)
# Print the result
print(overall_average_height)
Bestof <- Bestof%>%
arrange(player_height)
Bestof
average_row <- Bestof %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE)) %>%
mutate(player_name = "Average Player", season = NA_character_)
# Add the new row to the original dataset
Bestof_with_average <- bind_rows(Bestof, average_row)
# Print the resulting dataset
print(Bestof_with_average)
Bestof_with_average <- Bestof_with_average %>%
arrange(player_height)
Bestof_with_average
Bestof_with_average <- Bestof_with_average %>%
arrange(player_name)
Bestof_with_average
average_player_row <- Bestof_with_average %>%
filter(player_name == "Average Player")
# Print the resulting row
print(average_player_row)
loans_full_schema
average_row <- Bestof %>%
summarise(across(where(is.numeric), median, na.rm = TRUE)) %>%
mutate(player_name = "Average Player", season = NA_character_)
# Add the new row to the original dataset
Bestof_with_average <- bind_rows(Bestof, average_row)
# Print the resulting dataset
print(Bestof_with_average)
Bestof_with_average <- Bestof_with_average %>%
arrange(player_name)
Bestof_with_average
average_player_row <- Bestof_with_average %>%
filter(player_name == "Average Player")
# Print the resulting row
print(average_player_row)
print(average_player_row)
Full <- Bestof_with_average%>%
arrange(net_rating)
Full <- Bestof_with_average%>%
arrange(net_rating)
Full
Full <- Bestof_with_average%>%
arrange(desc(net_rating))
Full
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Bestof)
Bestof <- Bestof%>%
arrange(player_name)
Bestof
overall_average_height <- mean(Bestof$player_height, na.rm = TRUE)
# Print the result
print(overall_average_height)
Bestof <- Bestof%>%
arrange(player_height)
Bestof
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) & net_rating == max(net_rating, na.rm = TRUE)) %>%
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) & net_rating == max(net_rating, na.rm = TRUE) %>%
ungroup()
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) %>%
filter(net_rating == max(net_rating, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Bestof)
Bestof <- Bestof%>%
arrange(player_name)
Bestof
Bestof <- Bestof%>%
arrange(player_height)
Bestof
average_row <- Bestof %>%
summarise(across(where(is.numeric), median, na.rm = TRUE)) %>%
mutate(player_name = "Average Player", season = NA_character_)
# Add the new row to the original dataset
Bestof_with_average <- bind_rows(Bestof, average_row)
# Print the resulting dataset
print(Bestof_with_average)
Bestof_with_average <- Bestof_with_average %>%
arrange(player_name)
Bestof_with_average
average_player_row <- Bestof_with_average %>%
filter(player_name == "Average Player")
# Print the resulting row
print(average_player_row)
print(average_player_row)
Full <- Bestof_with_average%>%
arrange(desc(net_rating))
Full
average_player_row <- Bestof_with_average %>%
filter(player_name == "Average Player")
# Print the resulting row
print(average_player_row)
average_row <- Bestof %>%
summarise(across(where(is.numeric), median, na.rm = TRUE)) %>%
mutate(player_name = "Average Player", season = NA_character_)
# Add the new row to the original dataset
Bestof_with_average <- bind_rows(Bestof, average_row)
# Print the resulting dataset
print(Bestof_with_average)
Full <- Bestof_with_average%>%
arrange(desc(net_rating))
Full
Full <- Full %>%
filter(gp >= 9)
Full
Full <- Full %>%
filter(gp >= 10)
Full
samenetrating <- Full %>%
filter(!duplicated(select(Full, player_name, net_rating)) | !duplicated(select(Full, player_name, net_rating), fromLast = TRUE))
samenetrating <- Full %>%
filter(!duplicated(select(Full, player_name, net_rating)) | !duplicated(select(Full, player_name, net_rating), fromLast = TRUE))
samenetrating
test <- Full %>%
distinct(player_name, net_rating, .keep_all = TRUE)
test
same_entries <- Full %>%
group_by(player_name, net_rating) %>%
filter(n() > 1)
same_entries
print(same_entries)
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) %>%
filter(net_rating == max(net_rating, na.rm = TRUE)) %>%
filter(pts == max(pts, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Bestof)
Bestof <- curated %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) %>%
filter(net_rating == max(net_rating, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Bestof)
Full2 <- Full %>%
group_by(player_name) %>%
filter(gp == max(gp, na.rm = TRUE)) %>%
filter(net_rating == max(net_rating, na.rm = TRUE)) %>%
filter(pts == max(pts, na.rm = TRUE)) %>%
ungroup()
# Print the resulting dataset
print(Full2)
Full2 <- Full2%>%
arrange(player_name)
Full2
ggplot(Full2, aes(x = player_height, y = net_rating, color = cut(net_rating, breaks = c(-Inf, -5, 5, Inf)))) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Range") +
scale_color_manual(values = c("red", "yellow", "green")) +
theme_minimal()
ggplot(Full2, aes(x = player_height, y = net_rating, color = cut(net_rating, breaks = c(-Inf, -5, 5, Inf)))) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Range") +
scale_color_manual(values = c("red", "yellow", "green"))
ggplot(Full2, aes(x = player_height, y = net_rating, color = cut(net_rating, breaks = c(-Inf, -5, 5, Inf)))) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Range") +
scale_color_manual(values = c("red", "yellow", "green")) +
theme_minimal()
lower_quartile <- quantile(Full2$net_rating, 0.25)
upper_quartile <- quantile(Full2$net_rating, 0.75)
color <- ifelse(Full2$net_rating < lower_quartile, "red",
ifelse(Full2$net_rating > upper_quartile, "green", "yellow"))
ggplot(Full2, aes(x = player_height, y = net_rating, color = color)) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Quartiles") +
scale_color_manual(values = c("red", "yellow", "green")) +
theme_minimal()
ggplot(Full2, aes(x = player_height, y = net_rating, color = color)) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Quartiles") +
scale_color_manual(values = c("red", "yellow", "green"), guide = FALSE) +
theme_minimal()
ggplot(Full2, aes(x = player_height, y = net_rating, color = color)) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Quartiles") +
scale_color_manual(values = c("red", "yellow", "green"), guide = "none") +
theme_minimal()
ggplot(Full2, aes(x = player_height, y = net_rating, color = cut(net_rating, breaks = c(-Inf, -6.6, 2.8, Inf)))) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Range") +
scale_color_manual(values = c("red", "yellow", "green")) +
theme_minimal()
NRPH <- ggplot(Full2, aes(x = player_height, y = net_rating, color = cut(net_rating, breaks = c(-Inf, -6.6, 2.8, Inf)))) +
geom_point() +
labs(x = "Player Height", y = "Net Rating", color = "Net Rating Range") +
scale_color_manual(values = c("red", "yellow", "green")) +
theme_minimal()
NRPH
NRPH
average_player_row
print(average_player_row)
print(average_player_row)
View(average_player_row)
average_player_row
library(tidyverse)
average_player_row <- Bestof_with_average %>%
filter(player_name == "Average Player")
average_player_row
View(Bestof_with_average)
